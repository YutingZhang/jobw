#!/bin/bash

function force_int() {
echo "...... [ "`date`" ] ...... [ Force killing ]"
kill -9 $JOBC_JOB_PID > /dev/null 2>&1
}

function safe_int() {

echo "...... [ "`date`" ] ...... [ Try to stop ]"
kill -2 $JOBC_JOB_PID > /dev/null 2>&1
trap "force_int" 2

JOBC_IS_CANCELED=1

}

# main

pushd `dirname $0` > /dev/null ; SCRIPT_DIR="`pwd`"; popd > /dev/null

if [ "$1" == "" ]; then
    echo "JOB-CLIENT WACTHER"
    echo "  $0 JOBC_VAR_DIR" >&2
    exit 1
fi

JOBC_VAR_DIR="$1"

JOBCW_ID="$2"
if [ "$2" == "" ]; then
    JOBCW_ID="unknown"
fi

mkdir -p "$JOBC_VAR_DIR/q"  # queueing
mkdir -p "$JOBC_VAR_DIR/r"  # running
mkdir -p "$JOBC_VAR_DIR/d"  # done
mkdir -p "$JOBC_VAR_DIR/c"  # canceled

while true; do

    echo "...... [ "`date`" ] ...... [ List ]"
    ls -tr $JOBC_VAR_DIR/q | head -n1 | while read line ; do
        JOB_FOLDER_Q="$JOBC_VAR_DIR/q/$line"
        JOB_FOLDER_R="$JOBC_VAR_DIR/r/$line"
        #JOB_FOLDER_D="$JOBC_VAR_DIR/d/$line"
        
        echo "...... [ "`date`" ] ...... [ Run ]"
        echo "[ $JOB_FOLDER_Q ]"
        mv "$JOB_FOLDER_Q" "$JOBC_VAR_DIR/r"
        trap "safe_int" 2
        JOBC_IS_CANCELED=0
        bash "$JOB_FOLDER_R" & JOBC_JOB_PID=`echo $!`
        
        ( echo "[ "`date`" ] [ "$JOBCW_ID" ]"$'\n'"  START:  $line" ; \
            ( $SCRIPT_DIR/session_info | sed -e 's/^/\t/' ) ) >> $JOBC_VAR_DIR/log
        wait $JOBC_JOB_PID
        
        if [ "$JOBC_JOB_PID" -eq "0" ]; then
            mv "$JOB_FOLDER_R" "$JOBC_VAR_DIR/d"
            ( echo "[ "`date`" ] [ "$JOBCW_ID" ]"$'\n'"  DONE:   $line" ; \
                ( $SCRIPT_DIR/session_info | sed -e 's/^/    /' ) ) >> $JOBC_VAR_DIR/log
        else
            mv "$JOB_FOLDER_R" "$JOBC_VAR_DIR/c"
            ( echo "[ "`date`" ] [ "$JOBCW_ID" ]"$'\n'"  CANCEL: $line" ; \
                ( $SCRIPT_DIR/session_info | sed -e 's/^/    /' ) ) >> $JOBC_VAR_DIR/log
        fi

    done

    trap - 2
    echo "...... [ "`date`" ] ...... [ Sleep for 10s ]"
    sleep 10

done


